{% set name = "fs" %}
{% set version = "2.1.3" %}
{% set hash_type = "sha256" %}
{% set hash_value = "87e8d4e93040779a407c92b7f2f27117038927b4b1da41bdce23ce226557327d" %}

package:
  name: '{{ name|lower }}'
  version: '{{ version }}'

source:
  fn: '{{ name }}-{{ version }}.tar.gz'
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  '{{ hash_type }}': '{{ hash_value }}'

build:
  number: 1000
  script: python setup.py install  --single-version-externally-managed --record=record.txt

requirements:
  build:
    - python
    - setuptools
    
  run:
    - python
    - setuptools
    - appdirs >=1.4.3,<2
    - pytz
    - six >=1.10.0,<2
    - enum34 >=1.1.6,<2  # [py2k]
    - scandir >=1.5,<2  # [py2k or py34]
    - typing ==3.6.4  # [py2k or py34]
    - backports.os ==0.1.1  # [py2k]

test:
  imports:
    - fs
    - fs.opener

about:
  home: https://www.pyfilesystem.org/
  license: MIT
  license_family: MIT
  license_file: '{{ environ["RECIPE_DIR"] }}/LICENSE'
  summary: Filesystem abstraction layer for Python
  description: "pyfilesystem2 lets you work with diverse filesystems through a common API."
  doc_url: https://docs.pyfilesystem.org/en/v{{ version }}
  dev_url: 'https://github.com/PyFilesystem/pyfilesystem2'

extra:
  recipe-maintainers: 
    - notestaff
    - willmcgugan
    - ReimarBauer
